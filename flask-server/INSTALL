
CONTAINER=bs-flask-server
IMAGE=bs-flask

docker rm -f $CONTAINER 2>/dev/null
docker rmi -f $IMAGE:latest 2>/dev/null

FLASK_IP_ADDRESS=172.18.0.2
KEYCLOAK_MARIADB_IP_ADDRESS=172.18.0.3
KEYCLOAK_IP_ADDRESS=172.18.0.4
REACTJS_IP_ADDRESS=172.18.0.5
# KEYCLOAK_MARIADB_IP_ADDRESS=$(docker inspect -f "{{range .NetworkSettings.Networks}}{{.IPAddress}}{{end}}" bs-keycloak-mariadb-server)
# KEYCLOAK_IP_ADDRESS=$(docker inspect -f "{{range .NetworkSettings.Networks}}{{.IPAddress}}{{end}}" bs-keycloak-server)
# REACTJS_IP_ADDRESS=$(docker inspect -f "{{range .NetworkSettings.Networks}}{{.IPAddress}}{{end}}" fs-reactjs-server)
docker build \
	--build-arg "KEYCLOAK_MARIADB_IP_ADDRESS="$KEYCLOAK_MARIADB_IP_ADDRESS \
	--build-arg "KEYCLOAK_IP_ADDRESS="$KEYCLOAK_IP_ADDRESS \
	--build-arg "REACTJS_IP_ADDRESS="$REACTJS_IP_ADDRESS \
	-t $IMAGE:latest .

if [[ $?! = 0 ]]
then
        docker rmi $(docker images --filter dangling=true -aq) nil 2>/dev/null
        exit;
fi

docker run -itd \
	--name $CONTAINER \
	--hostname $CONTAINER \
	--ip "172.18.0.2" \
	--workdir "/app" \
    --volume "./app:/app:z" \
	--restart always \
	--network "sso_auth_server" \
	-p "8899:5000" \
	$IMAGE:latest
if [[ $?! = 0 ]]
then
	docker rm $(docker ps -aq --filter status=exited) nil 2>/dev/null
	exit;
fi
